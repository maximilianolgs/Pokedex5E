local monarch = require "monarch.monarch"
local url = require "utils.url"
local gooey = require "gooey.gooey"
local gui_colors = require "utils.gui_colors"
local gooey_buttons = require "utils.gooey_buttons"
local gui_utils = require "utils.gui"
local flow = require "utils.flow"
local fakemon = require "fakemon.fakemon"
local settings = require "pokedex.settings"
local screens = require "utils.screens"
local messages = require "utils.messages"
local platforms = require "utils.platform"
local localization = require "utils.localization"


local function update_checkbox(checkbox)
	if checkbox.checked then
		gui.set_color(checkbox.node, gui_colors.ORANGE)
	else
		gui.set_color(checkbox.node, gui_colors.WHITE)
	end
end

local function on_gender_checked(self, checkbox)
	settings.set("strict_gender", checkbox.checked)
	self.strict_gender = checkbox.checked
end

local function on_ga_design_events_checked(self, checkbox)
	settings.set("ga_design_events", checkbox.checked)
	self.ga_design_events = checkbox.checked
end

local function on_ga_error_report_checked(self, checkbox)
	settings.set("ga_error_report", checkbox.checked)
	self.ga_error_report = checkbox.checked
end

local function update_radio(radio)
	if radio.selected then
		gui.set_color(radio.node, gui_colors.ORANGE)
	else
		gui.set_color(radio.node, gui_colors.WHITE)
	end
end

local function refresh_language_radio()
	gooey.radio("language/radio_en").set_selected(settings.get("lang")=="en_us")
	update_radio(gooey.radio("language/radio_en"))

	gooey.radio("language/radio_es").set_selected(settings.get("lang")=="es_419")
	update_radio(gooey.radio("language/radio_es"))
end

local function load_localized_text()
	gui.set_text(gui.get_node("top_divider/title"), localization.get("settings_screen", "title", "Settings"))
	gui.set_text(gui.get_node("txt_remove"), localization.get("settings_screen", "txt_remove", "REMOVE"))
	gui.set_text(gui.get_node("desc_fakemon"), localization.get("settings_screen", "desc_fakemon", "Add a package of Fakemon to your app."))
	gui.set_text(gui.get_node("txt_paste"), localization.get("settings_screen", "txt_paste", "PICK"))
	gui.set_text(gui.get_node("strict_gender/text"), localization.get("settings_screen", "strict_gender", "Use Strict Gender"))
	gui.set_text(gui.get_node("language/title"), localization.get("settings_screen", "language", "Language"))
	gui.set_text(gui.get_node("ga_title"), localization.get("settings_screen", "ga_title", "Game Analytics"))
	gui.set_text(gui.get_node("ga_design_events/text"), localization.get("settings_screen", "ga_design_events", "Usage Statistics"))
	gui.set_text(gui.get_node("ga_error_report/text"), localization.get("settings_screen", "ga_error_report", "Error Reports"))
end

local function set_lang(lang)
	settings.set("lang", lang)
	load_localized_text()
end

function init(self)
	msg.post(".", messages.ACQUIRE_INPUT_FOCUS)
	msg.post(url.MENU, messages.HIDE)
	self.strict_gender = settings.get("strict_gender", false)
	self.ga_design_events = settings.get("ga_design_events", true)
	self.ga_error_report = settings.get("ga_error_report", true)
	self.lang = settings.get("lang")

	load_localized_text()

	gooey.checkbox("strict_gender/checkmark").set_checked(self.strict_gender)
	update_checkbox(gooey.checkbox("strict_gender/checkmark"))
	gooey.checkbox("ga_design_events/checkmark").set_checked(self.ga_design_events)
	update_checkbox(gooey.checkbox("ga_design_events/checkmark"))
	gooey.checkbox("ga_error_report/checkmark").set_checked(self.ga_error_report)
	update_checkbox(gooey.checkbox("ga_error_report/checkmark"))

	refresh_language_radio()

	if platforms.WEB then
		gui.set_enabled(gui.get_node("fakemon"), false)
		gui.set_enabled(gui.get_node("game_analytics"), false)
	else
		if fakemon.LOCAL_INDEX then
			gui.set_text(gui.get_node("name_fakemon"), fakemon.LOCAL_INDEX["name"])
		else
			gui.set_enabled(gui.get_node("btn_remove_fakemon"), false)
		end
	end
end

function on_input(self, action_id, action)
	gooey.button("btn_pick_fakemon", action_id, action, function()
		monarch.show(screens.FAKEMON)
	end, function(button) gooey_buttons.common_button(button, gui.get_node("txt_paste")) end)
	
	gooey.button("btn_close", action_id, action, function()
		if self.lang == settings.get("lang") then
			monarch.back()
		else
			msg.post("@system:", "reboot")
		end
	end, gooey_buttons.close_button)

	gooey.button("btn_info", action_id, action, function()
		monarch.show(screens.INFO, nil, {text=localization.get("settings_screen","strict_gender_info","Enforces genders during evolution as well as restrict some genders that a few Pokemon Species can be.")})
	end, gooey_buttons.info_button)

	gooey.checkbox("strict_gender/checkmark", action_id, action, function(ck) on_gender_checked(self, ck) end, update_checkbox)
	gooey.button("strict_gender/bg", action_id, action, function()
		local checkbox = gooey.checkbox("strict_gender/checkmark")
		checkbox.set_checked(not checkbox.checked)
		update_checkbox(checkbox)
		on_gender_checked(self, checkbox)
	end)

	gooey.radiogroup("lang", action_id, action, function(group_id, action_id, action)
		gooey.radio("language/radio_en", group_id, action_id, action, function(radio)
			set_lang("en_us")
		end, update_radio)
		gooey.radio("language/radio_es", group_id, action_id, action, function(radio)
			set_lang("es_419")
		end, update_radio)
	end)

	gooey.button("language/box_english", action_id, action, function()
		set_lang("en_us")
		refresh_language_radio()
	end)
	gooey.button("language/box_spanish", action_id, action, function()
		set_lang("es_419")
		refresh_language_radio()
	end)

	gooey.checkbox("ga_design_events/checkmark", action_id, action, function(ck) on_ga_design_events_checked(self, ck) end, update_checkbox)
	gooey.button("ga_design_events/bg", action_id, action, function()
		local checkbox = gooey.checkbox("ga_design_events/checkmark")
		checkbox.set_checked(not checkbox.checked)
		update_checkbox(checkbox)
		on_ga_design_events_checked(self, checkbox)
	end)

	gooey.checkbox("ga_error_report/checkmark", action_id, action, function(ck) on_ga_error_report_checked(self, ck) end, update_checkbox)
	gooey.button("ga_error_report/bg", action_id, action, function()
		local checkbox = gooey.checkbox("ga_error_report/checkmark")
		checkbox.set_checked(not checkbox.checked)
		update_checkbox(checkbox)
		on_ga_error_report_checked(self, checkbox)
	end)
	
	gooey.button("btn_remove_fakemon", action_id, action, function()
		flow.start(function()
			fakemon.remove_package()
			flow.until_true(function() return not fakemon.BUSY end)
			msg.post("@system:", "reboot")
		end)
	end, function(button) gooey_buttons.common_button(button, gui.get_node("txt_paste")) end)
end